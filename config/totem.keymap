//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE  0
#define MEDIA 1
#define NAV   2
#define MOUSE 3
#define SYM   4
#define NUM   5
#define FUN   6

&mt {
        tapping-term-ms = <175>;
        flavor = "balanced";
};
&lt {
        tapping-term-ms = <175>;
        flavor = "balanced";
};

/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        bindings = <
           &kp Q       &kp W         &kp F         &kp P         &kp B       &kp J      &kp L        &kp U        &kp Y       &kp SEMI           
           &mt LGUI A  &mt LALT R    &mt LCTRL S   &mt LSHFT T   &kp G       &kp M      &mt RSHFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O        
&kp GRAVE  &kp Z       &kp X         &kp C         &kp D         &kp V       &kp K      &kp H        &kp COMMA    &kp DOT     &kp FSLH   &kp SQT
                       &lt MEDIA ESC &lt NAV SPACE &lt MOUSE TAB                        &lt SYM RET  &lt NUM BSPC &lt FUN DEL
                        >;
                };
                media_layer {
                        bindings = <
           &none       &none         &none         &none         &none       &none      &none        &none        &none        &none        
           &kp LGUI    &kp LALT      &kp LCTRL     &kp LSHFT     &none       &none      &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   
&none      &none       &none         &none         &none         &none       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none
                                     &none         &none         &none       &kp C_STOP &kp C_PLAY   &kp C_MUTE
                        >;
                };
                navigation_layer {
                        bindings = <
           &none       &none         &none         &none         &none       &none      &none       &none        &none       &none      
           &kp LGUI    &kp LALT      &kp LCTRL     &kp LSHFT     &none       &caps_word &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT  
&none      &none       &none         &none         &none         &none       &none      &kp HOME    &kp PG_DN    &kp PG_UP   &kp END    &none
                                     &none         &none         &none       &none      &none       &none
                        >;
                };
                // Don't really want to do mouse emulation
                mouse_layer {
                        bindings = <
           &none       &none         &none         &none         &none       &none      &none       &none        &none       &none           
           &kp LGUI    &kp LALT      &kp LCTRL     &kp LSHFT     &none       &none      &none       &none        &none       &none      
&none      &none       &none         &none         &none         &none       &none      &none       &none        &none       &none      &none
                                     &none         &none         &none       &none      &none       &none
                        >;
                };
                symbols_layer {
                        bindings = <
           &kp LBRC    &kp AMPS      &kp ASTRK     &kp LPAR      &kp RBRC    &none      &none       &none        &none       &none           
           &kp COLON   &kp DLLR      &kp PRCNT     &kp CARET     &kp PLUS    &none      &kp RSHFT   &kp RCTRL    &kp RALT    &kp RGUI   
&none      &kp TILDE   &kp EXCL      &kp AT        &kp POUND     &kp PIPE    &none      &none       &none        &none       &none      &none
                                     &kp LPAR      &kp RPAR      &kp UNDER   &none      &none       &none
                        >;
                };
                numbers_layer {
                        bindings = <
           &kp LBKT    &kp N7        &kp N8        &kp N9        &kp RBKT    &none      &none       &none        &none       &none      
           &kp SEMI    &kp N4        &kp N5        &kp N6        &kp EQUAL   &none      &kp RSHFT   &kp RCTRL    &kp RALT    &kp RGUI   
&none      &kp GRAVE   &kp N1        &kp N2        &kp N3        &kp BSLH    &none      &none       &none        &none       &none      &none
                                     &kp DOT       &kp N0        &kp MINUS   &none      &none       &none
                        >;
                };
                function_layer {
                        bindings = <
           &none       &kp F7      &kp F8        &kp F9        &kp F12       &none      &none       &none        &none       &none           
           &none       &kp F4      &kp F5        &kp F6        &kp F11       &none      &kp RSHFT   &kp RCTRL    &kp RALT    &kp RGUI        
&none      &none       &kp F1      &kp F2        &kp F3        &kp F10       &none      &none       &none        &none       &none      &none
                                     &none         &none         &none       &none      &none       &none
                        >;
                };
        };
};